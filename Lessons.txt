I learnt a lot from the STM task. I learnt to use CooCox IDE. I figured out how top use the example codes to successfully implement mmy code. It felt complicated in the beginning as the data sheet was huge. However, I soon learnt that there wasn`t actually any need to read it as such. The example codes are more than enough to deal with anything that we may need. I learnt to use GPIO,clocks,timers,PWM,interrupts,ADC and UART. GPIO wasn`t a challenge. I learnt how to set up clocks and tweak the base struct for our needs. For timers and PWM, I first learnt to figure out how to set up separate clocks simultaneously and to calculate PWM frequency. I used this knowledge to blink LEDs in a particular sequence and run a hobby servo. Next, I implemented external interrupts by running the servo in steps by using the interrupt attached to the external push-button. Finally, I implemented UART. Initially, I was really confused as my code only sent the data correctly but was receiving garbage. To deal with that I used polling. After implementing that correctly I moved on to implenting interrupts.  After learning all these basics I did the final task which was to take the input from a potentiometer and send the adc value by UART to adjust the brightness of an LED. The codes were running individually but when I combined them they were not. I finally understood the problem. I  had not used the ADC in continuous conversion mode and hence the same value was being sent earlier. After changing that it worked.